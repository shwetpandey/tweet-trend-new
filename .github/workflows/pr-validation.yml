name: Check Build Status and Create PR

on:
  pull_request:
    branches:
      - 'main'

jobs:
  check_and_create_pr:
    runs-on: self-hosted  # Ensure your self-hosted runner is a Windows machine

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Get Build Status
      id: get-build-status
      shell: powershell
      run: |
        # Define the URL and token
        $url = "http://localhost:9111/app/rest/builds/id:148"
        $token = "${{ secrets.TEAMCITY_TOKEN }}"
        $headers = @{
            "Authorization" = "Bearer $token"
        }
        $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers -ContentType "application/xml"
        
        # Extract and output the build status
        $STATUS = [xml]$response.status
        Write-Output "Build status: $STATUS"
        
        # Set the STATUS environment variable for the subsequent steps
        Add-Content -Path $env:GITHUB_ENV -Value "STATUS=$STATUS"

    - name: Fail or Pass PR Based on Build Status
      id: evaluate-status
      shell: powershell
      run: |
        # Check if the build status is 'SUCCESS'
        if ($env:STATUS -ne "SUCCESS") {
          Write-Output "Build status is not successful. Failing the workflow."
          exit 1
        }
        Write-Output "Build status is successful. Proceeding."

    - name: Create Pull Request
      if: ${{ steps.evaluate-status.outcome == 'success' }}
      uses: actions/github-script@v6
      with:
        script: |
          const { getOctokit, context } = require('@actions/github');
          const octokit = getOctokit(process.env.GITHUB_TOKEN);

          async function createPullRequest() {
            try {
              const { data: pullRequest } = await octokit.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Pull Request Title',
                head: context.ref.replace('refs/heads/', ''), // Ensure to provide the branch name correctly
                base: 'main',
                body: 'Pull Request Body'
              });
              console.log(`Pull request created: ${pullRequest.html_url}`);
            } catch (error) {
              console.error(`Error creating pull request: ${error.message}`);
            }
          }

          createPullRequest();
